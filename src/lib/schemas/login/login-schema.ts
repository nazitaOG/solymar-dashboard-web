import { z } from "zod"

/**
 * üß© Esquema Zod equivalente al LoginUserDto del backend.
 * 
 * - email ‚Üí string no vac√≠o, trim, lowercase, m√°x. 128 caracteres
 * - password ‚Üí string no vac√≠o, m√°x. 64 caracteres
 * 
 * El objetivo es que este esquema sea 100% isom√≥rfico al DTO backend,
 * evitando inconsistencias en validaci√≥n.
 */
export const loginSchema = z.object({
  email: z
    .string()
    .trim()
    .toLowerCase()
    .min(1, "El email es obligatorio.")
    .max(128, "El email no puede superar los 128 caracteres.")
    .email("Debe ser un email v√°lido."),

  password: z
    .string()
    .trim()
    .min(1, "La contrase√±a es obligatoria.")
    .max(64, "La contrase√±a no puede superar los 64 caracteres."),
})

export type LoginSchema = z.infer<typeof loginSchema>
